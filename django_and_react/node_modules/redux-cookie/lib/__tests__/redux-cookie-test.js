'use strict';

var _ = require('../');

var _redux = require('redux');

var _sinon = require('sinon');

var _chai = require('chai');

var __cookie = {
  get: function get(name) {},
  set: function set(name, value) {}
};

var name = 'test-name';
var value = 'test-awesome-value';

var store = null;

function create() {
  return _redux.applyMiddleware.apply(undefined, arguments)(_redux.createStore)(function () {}, {});
}

describe('createCookieMiddleware', function () {
  beforeEach(function () {
    store = create((0, _.createCookieMiddleware)(__cookie));
  });

  afterEach(function () {
    store = null;
  });

  it('should call cookie set method when action setCookie is called', function () {
    var setSpy = (0, _sinon.spy)(__cookie, 'set');

    store.dispatch((0, _.setCookie)(name, value));

    (0, _chai.expect)(setSpy.calledWith(name, value)).to.be.true;

    setSpy.restore();
  });

  it('should call cookie get method when action getCookie is called', function () {
    var getSpy = (0, _sinon.spy)(__cookie, 'get');

    store.dispatch((0, _.getCookie)(name));

    (0, _chai.expect)(getSpy.calledWith(name)).to.be.true;

    getSpy.restore();
  });

  it('should call cookie set method when action expireCookie is called', function () {
    var setSpy = (0, _sinon.spy)(__cookie, 'set');

    store.dispatch((0, _.expireCookie)(name));

    (0, _chai.expect)(setSpy.calledWith(name)).to.be.true;

    setSpy.restore();
  });
});